# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
  docker:
    needs: build
    name: Docker magic !
    runs-on: ubuntu-20.04
    env:
      DOCKERHUB_USER: ${{secrets.DOCKERHUB_USER}}
      DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
      DOCKERHUB_REPO: ${{secrets.DOCKERHUB_REPO}}
    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v2
      - name: üê≥ Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ secrets.DOCKERHUB_REPO }}
          label-custom: |
            org.opencontainers.image.title=Gladys Assitant Preprod Image
      - name: üíΩ Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: üê≥ Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: ‚ÜôÔ∏è Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: static
          path: static
      - name: üîë Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: üê≥ Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.buildx
          platforms: ${{ github.event.inputs.platforms }}
          push: true
          pull: true
          tags: ${{ secrets.DOCKERHUB_REPO }}:${{ github.event.inputs.tag }}
